---
# tasks file for init

- name: Check configuration data
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/asserts.yml"

- name: Autodetect repository type
  when: init_project_type == 'auto'
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/auto.yml"

- name: Load collection meta information
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/meta.yml"

- name: Deploy Molecule configuration files
  vars:
    __init_scenario_dir: "{{ init_scenario_dir if init_scenario_dir.split('/')[-2] == 'molecule' else init_scenario_dir + '/default' }}"
    __init_resources_dir: "{{ __init_scenario_dir.split('/')[:-1] | join('/') }}/resources"
    __init_scenario_name: "{{ init_scenario_dir | basename }}"
  block:
    - name: Create molecule directory
      # Assume that we're inside a 'molecule' directory (checked via asserts.yml)
      loop:
        - "{{ __init_scenario_dir }}"
        - "{{ __init_resources_dir }}"
      loop_control:
        loop_var: __init_directory
      ansible.builtin.file:
        path: "{{ __init_directory }}"
        state: directory
        mode: "0755"

    - name: Deploy molecule configuration
      ansible.builtin.template:
        src: "{{ role_path }}/templates/molecule.yml.j2"
        dest: "{{ __init_scenario_dir }}/molecule.yml"
        mode: 0644
        backup: "{{ init_file_backup }}"

    - name: Deploy resource template
      loop:
        - collections.yml
        - requirements.yml
        - create.yml
        - prepare.yml
        - destroy.yml
        - converge.yml
        - side_effect.yml
        - verify.yml
        - cleanup.yml
      loop_control:
        loop_var: __init_item
      ansible.builtin.template:
        src: "{{ role_path }}/templates/{{ __init_item }}.j2"
        dest: "{{ __init_resources_dir }}/{{ __init_item }}"
        mode: "0644"
        backup: "{{ init_file_backup }}"
        force: "{{ init_overwrite_resources }}"

    - name: Link Ansible dependency
      loop:
        - requirements.yml
        - collections.yml
      loop_control:
        loop_var: __init_item
      ansible.builtin.file:
        src: "{{ __init_resources_dir }}/{{ __init_item }}"
        dest: "{{ __init_scenario_dir }}/{{ __init_item }}"
        state: link
        force: true

