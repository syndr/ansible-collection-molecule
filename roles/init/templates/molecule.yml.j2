---
role_name_check: 0
dependency:
  name: galaxy
driver:
  name: default
  options:
    managed: true
    login_cmd_template: 'docker exec -ti {instance} bash'
platforms:
{% for init_platform in init_platforms %}
  - name: {{ init_platform.name }}
    type: {{ init_platform.type }}
{% if init_platform.type == 'docker' %}
    image: {{ init_platform.config.image }}
    systemd: {{ init_platform.config.systemd | default(false) }}
    modify_image: {{ init_platform.config.modify_image | default(false) }}
{% if init_platform.config.modify_image_buildpath is defined %}
    modify_image_buildpath: {{ init_platform.config.modify_image_buildpath }}
{% endif %}
    privileged: {{ init_platform.config.privileged | default(false) }}
    hostvars: {}
{% endif %}
{% endfor %}
provisioner:
  name: ansible
  log: True
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
    side_effect: side_effect.yml
    verify: verify.yml
    cleanup: cleanup.yml
  config_options:
    defaults:
      gathering: explicit
      playbook_vars_root: top
      verbosity: ${ANSIBLE_VERBOSITY:-0}
{% if init_ansible_secret_path is truthy %}
      vault_password_file: {{ init_ansible_secret_path }}
{% endif %}
{% if init_project_type == 'monolith' %}
  env:
    ANSIBLE_ROLES_PATH: /usr/share/ansible/roles:/etc/ansible/roles:~/.ansible/roles:${PWD}/roles
    ANSIBLE_COLLECTIONS_PATH: /usr/share/ansible/collections:~/.ansible/collections:${PWD}/collections
{% endif %}
{% if init_project_type == 'playbook' %}
  env:
    ANSIBLE_ROLES_PATH: /usr/share/ansible/roles:/etc/ansible/roles:~/.ansible/roles:${PWD}/roles:${PWD}/../roles:${PWD}/../../roles
    ANSIBLE_COLLECTIONS_PATH: /usr/share/ansible/collections:~/.ansible/collections:${PWD}/collections:${PWD}/../collections:${PWD}/../../collections
{% endif %}
scenario:
  create_sequence:
    - dependency
    - create
    - prepare
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
verifier:
  name: ansible
  enabled: true

