---
role_name_check: 0
dependency:
  name: galaxy
driver:
  name: default
  options:
    managed: true
platforms:
  - name: ec2-rockylinux9
    type: ec2
    image: ami-067daee80a6d36ac0
    region: us-east-2
    vpc_id: vpc-0eb9fd1391f4207ec
    vpc_subnet_id: subnet-0aa189c0d6fc53923
    instance_type: t3.micro
    hostvars: {}
provisioner:
  name: ansible
  log: True
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
    side_effect: side_effect.yml
    verify: verify.yml
    cleanup: cleanup.yml
  config_options:
    defaults:
      gathering: explicit
      playbook_vars_root: top
      verbosity: ${ANSIBLE_VERBOSITY:-0}
scenario:
  create_sequence:
    - dependency
    - create
    - prepare
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
verifier:
  name: ansible
  enabled: true

