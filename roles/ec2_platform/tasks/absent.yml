---
# Remove ec2 test resources

- name: Load Molecule instance config
  ansible.builtin.set_fact:
    __ec2_instance_molecule_instance_config: "{{ (lookup('file', molecule_instance_config, errors='ignore') or '{}') | from_yaml }}"

- name: Validate platform configurations
  ansible.builtin.assert:
    that:
      - ec2_platform is mapping
      - ec2_platform.name is string and platform.name | length > 0
      - ec2_platform.aws_profile is string
      - ec2_platform.key_inject_method is in ["cloud-init", "ec2"]
      - ec2_platform.key_name is string and ec2_platform.key_name | length > 0
      - ec2_platform.region is string
      - ec2_platform.security_group_name is string and ec2_platform.security_group_name | length > 0
      - ec2_platform.security_groups is sequence
      - ec2_platform.vpc_id is string
      - ec2_platform.vpc_subnet_id is string and ec2_platform.vpc_subnet_id | length > 0
    quiet: true

- name: Look up subnets to determine VPCs (if needed)
  amazon.aws.ec2_vpc_subnet_info:
    profile: "{{ ec2_platform.aws_profile | default(omit) }}"
    region: "{{ ec2_platform.region | default(omit) }}"
    subnet_ids: "{{ ec2_platform.vpc_subnet_id }}"
  when: not ec2_platform.vpc_id
  register: __ec2_platform_subnet_info

- name: Validate discovered information
  ansible.builtin.assert:
    that: ec2_platform.vpc_id or (__ec2_platform_subnet_info.subnets | length > 0)
    quiet: true

- name: Destroy ephemeral EC2 instances
  amazon.aws.ec2_instance:
    profile: "{{ ec2_platform.aws_profile | default(omit) }}"
    region: "{{ ec2_platform.region | default(omit) }}"
    instance_ids: "{{ instance_config | map(attribute='instance_ids') | flatten }}"
    vpc_subnet_id: "{{ ec2_platform.vpc_subnet_id }}"
    state: absent
  register: __ec2_instance_destroy

#- name: Write Molecule instance configs
#  ansible.builtin.copy:
#    dest: "{{ molecule_instance_config }}"
#    content: "{{ {} | to_yaml }}"

- name: Destroy ephemeral security groups (if needed)
  amazon.aws.ec2_security_group:
    profile: "{{ ec2_platform.aws_profile | default(omit) }}"
    region: "{{ ec2_platform.region | default(omit) }}"
    vpc_id: "{{ ec2_platform.vpc_id or __ec2_platform_subnet_info.subnets[0] }}"
    name: "{{ ec2_platform.security_group_name }}"
    state: absent
  when: ec2_platform.security_groups | length == 0

- name: Destroy ephemeral keys (if needed)
  amazon.aws.ec2_key:
    profile: "{{ ec2_platform.aws_profile | default(omit) }}"
    region: "{{ ec2_platform.region | default(omit) }}"
    name: "{{ ec2_platform.key_name }}"
    state: absent
  when: ec2_platform.key_inject_method == "ec2"

