---
# Build an ansible inventory data structure
#
# This is a dictionary such as:
#
# all:
#   children:
#     molecule:
#       hosts:
#         instance_host_1:
#         instance_host_2:
#       vars:
#         ansible_user: molecule_runner
#         ansible_ssh_private_key_file: /path/to/private_key
#
# Expected variables:
#  - __platform_target_instance_config: A dictionary containing the new instance configuration
#  - __platform_ansible_hostvars: A dictionary containing additional hostvars to add to the instance configuration
#  - __platform_current_molecule_inventory: The current molecule inventory contents
#
# Output
#  - __platform_molecule_inventory: The updated molecule inventory contents
#

- name: 🐜 Show platform config
  ansible.builtin.debug:
    var: platform_exported_config
    verbosity: 1

- name: 🐜 Show ansible inventory config from file
  ansible.builtin.debug:
    var: platform_inventory_config_from_file
    verbosity: 1

- name: Platform Molecule Inventory | Build host configuration
  ansible.builtin.set_fact:
    __platform_ansible_hosts: >-
      {%- set __platform_host_definitions = {} -%}
      {%- for __platform_host_name, __platform_host_data in platform_exported_config.items() -%}
        {%- set _ = __platform_host_definitions.update({
          __platform_host_name: __platform_host_data.hostvars
        }) -%}
      {%- endfor -%}
      {{ __platform_host_definitions }}

- name: Platform Molecule Inventory | Load existing unreferenced hosts
  ansible.builtin.set_fact:
    # Existing host configuration, minus those that are being updated
    __platform_ansible_existing_unreferenced_hosts: >-
      {%- set __platform_unreferenced_hosts = {} -%}
      {%- for __platform_host_name, __platform_host_data in (platform_inventory_config_from_file.all.children.molecule.hosts | default({})).items() -%}
        {%- if __platform_host_name not in __platform_ansible_hosts.keys() -%}
          {%- set _ = __platform_unreferenced_hosts.update({
            __platform_host_name: __platform_host_data
          }) -%}
        {%- endif -%}
      {%- endfor -%}
      {{ __platform_unreferenced_hosts }}

- name: 🐜 Show platform host definitions
  ansible.builtin.debug:
    var: __platform_ansible_hosts
    verbosity: 1

- name: Show existing unreferenced hosts
  ansible.builtin.debug:
    var: __platform_ansible_existing_unreferenced_hosts
    verbosity: 1

- name: Build and manage inventory file
  vars:
    __platform_ansible_hosts_present: >-
      {{
        __platform_ansible_hosts
        | combine(__platform_ansible_existing_unreferenced_hosts)
        if platform_state == 'present'
        else __platform_ansible_existing_unreferenced_hosts
      }}
  block:
    - name: Platform Molecule Inventory | Build inventory object
      ansible.builtin.set_fact:
        __platform_molecule_inventory: >-
          {{
            platform_inventory_config_from_file
            | combine({
              'all': {
                'children': {
                  'molecule': {
                    'hosts': __platform_ansible_hosts_present
                  }
                }
              }
            })
          }}

    - name: Platform Molecule Inventory | Write inventory file
      when:
        - __platform_ansible_hosts_present is truthy
      ansible.builtin.copy:
        content: |
          {{ __platform_molecule_inventory | to_nice_yaml(indent=2) }}
        dest: "{{ platform_molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
        mode: '0644'

    - name: Platform Molecule Inventory | Remove inventory file
      when:
        - __platform_ansible_hosts_present is not truthy
      ansible.builtin.file:
        path: "{{ platform_molecule_ephemeral_directory }}/inventory/molecule_inventory.yml"
        state: absent

- name: Platform Molecule Inventory | Force inventory refresh
  ansible.builtin.meta: refresh_inventory

- name: Platform Molecule Inventory | Validate molecule group
  when:
    - __platform_molecule_inventory is defined
    - platform_state == 'present'
  ansible.builtin.assert:
    that: "'molecule' in groups"
    fail_msg: |
      Molecule group was not found inside inventory groups: {{ groups }}
    success_msg: "Molecule group found inside inventory groups: {{ groups }}"

