---
role_name_check: 0
dependency:
  name: galaxy
driver:
  name: default
  options:
    managed: true
    login_cmd_template: 'docker exec -ti {instance} bash --login'
platforms:
  - name: ansible-collection-molecule-docker-rockylinux9
    type: docker
    image: geerlingguy/docker-rockylinux9-ansible:latest
    systemd: True
    privileged: False
    hostvars:
      test_hostvar: test
  - name: ansible-collection-molecule-docker-rockylinux9-customized
    type: docker
    image: rockylinux/rockylinux:9-ubi
    systemd: True
    exec_systemd: True
    exec_systemd_build_commands:
      - dnf install -y sudo
    privileged: False
    hostvars:
      test_hostvar: test
  - name: ansible-collection-molecule-docker-fedora41
    type: docker
    image: geerlingguy/docker-fedora41-ansible:latest
    systemd: True
    privileged: False
    hostvars:
      test_hostvar: test
  - name: ansible-collection-molecule-docker-ubuntu2204
    type: docker
    image: geerlingguy/docker-ubuntu2204-ansible:latest
    systemd: True
    privileged: False
    hostvars:
      test_hostvar: test
provisioner:
  name: ansible
  log: True
  playbooks:
    create: ../resources/create.yml
    prepare: ../resources/prepare.yml
    converge: ../resources/converge.yml
    side_effect: ../resources/side_effect.yml
    verify: ../resources/verify.yml
    cleanup: ../resources/cleanup.yml
    destroy: ../resources/destroy.yml
  config_options:
    defaults:
      gathering: explicit
      verbosity: ${ANSIBLE_VERBOSITY:-0}
  env:
    ARA_API_CLIENT: ${ARA_API_CLIENT:-'http'}
    ARA_API_SERVER: ${ARA_API_SERVER:-'http://localhost:8000'}
    ARA_DEFAULT_LABELS: ${ARA_DEFAULT_LABELS:-'testing,molecule'}
    # To use Ara with molecule:
    #  export the ANSIBLE_CALLBACK_PLUGINS env var with the output of 'python3 -m ara.setup.callback_plugins'
    ANSIBLE_CALLBACK_PLUGINS: ${ANSIBLE_CALLBACK_PLUGINS}
scenario:
  create_sequence:
    - dependency
    - create
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
verifier:
  name: ansible
  enabled: true

