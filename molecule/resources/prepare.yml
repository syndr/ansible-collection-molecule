---

- name: Prepare controller for execution
  hosts: localhost
  vars:
    collection_namespace: "{{ (lookup('file', playbook_dir ~ '/../../galaxy.yml') | from_yaml).namespace }}"
    collection_name: "{{ (lookup('file', playbook_dir ~ '/../../galaxy.yml') | from_yaml).name }}"
  tasks:
    - name: Configure for standalone role testing
      ansible.builtin.include_role:
        name: syndr.molecule.prepare_controller
      vars:
        prepare_controller_project_type: collection

    - name: Archive this project for transfer
      community.general.archive:
        path: "{{ playbook_dir }}/../../"
        dest: "{{ molecule_ephemeral_directory }}/project.tar"
        format: tar

    - name: Build collection
      ansible.builtin.command:
        chdir: "{{ playbook_dir }}/../../"
        cmd: ansible-galaxy collection build --force
      register: build_result

    - name: Install collection
      vars:
        collection_archive_path: "{{ build_result.stdout | regex_replace('.*\\s+(\\S+\\.tar\\.gz)', '\\1') }}"
      ansible.builtin.command:
        chdir: "{{ playbook_dir }}/../../"
        cmd: ansible-galaxy collection install --force {{ collection_archive_path }}

- name: Prepare target host for execution
  hosts: molecule
  tags: always
  vars:
    molecule_user: molecule_runner
  tasks:
    ##
    # Creating an admin service account for Molecule/Ansible to use for testing
    #
    #   - If you run Ansible as a service account (you should) on your hosts and
    #     not as root, it is wise to also test as a non-root user!
    #
    #   - To use this account, add the following to any plays targeting test
    #     infrastructure (such as in converge.yml):
    #
    #         vars:
    #           ansible_user: molecule_runner
    ##
    - name: Create ansible service account
      block:
        - name: Create ansible group
          ansible.builtin.group:
            name: "{{ molecule_user }}"

        - name: Create ansible user
          ansible.builtin.user:
            name: "{{ molecule_user }}"
            group: "{{ molecule_user }}"

        - name: Sudoers.d directory exists
          ansible.builtin.file:
            path: /etc/sudoers.d
            state: directory
            owner: root
            group: root
            mode: 0751

        - name: Ansible user has sudo
          ansible.builtin.copy:
            content: |
              {{ molecule_user }}  ALL=(ALL)  NOPASSWD: ALL
            dest: /etc/sudoers.d/ansible
            owner: root
            group: root
            mode: 0600

    - name: "Save vars to host (IE: generated test credentials, etc.)"
      become: true
      block:
        - name: Ansible facts directory exists
          ansible.builtin.file:
            path: /etc/ansible/facts.d
            state: directory
            owner: root
            group: root
            mode: 0755

        - name: Persistent data saved to local Ansible facts
          ansible.builtin.copy:
            dest: /etc/ansible/facts.d/molecule.fact
            content: "{{ {'test_prepare_fact': 'this is an example!'} | to_json }}"
            owner: root
            group: root
            mode: 0644

    - name: Collect host facts
      ansible.builtin.setup:
        filter:
          - ansible_distribution*

    - name: Install packages
      # NOTE: If testing with a distro not mentioned in this block, you'll need to add code for it here!
      block:
        - name: Install packages for ubuntu
          block:
            - name: Install prereqs (Ubuntu)
              ansible.builtin.apt:
                update_cache: true
                pkg:
                  - software-properties-common
                  - dirmngr

            - name: Install Ansible PPA (Ubuntu)
              ansible.builtin.apt_repository:
                repo: "ppa:ansible/ansible"

            - name: Install packages (Ubuntu)
              ansible.builtin.apt:
                pkg:
                  - ansible
                  - wget
          when: ansible_distribution | lower == 'ubuntu'

        - name: Install packages (RHEL Family)
          ansible.builtin.package:
            name:
              - ansible-core
              - wget
          when: ansible_distribution_file_variety | lower == 'redhat'

    - name: Verify application availibility
      ansible.builtin.command:
        cmd: "{{ item }}"
      changed_when: false
      loop:
        - ansible-playbook --version
        - wget --version

    - name: Add the working version of this project to test host
      become: true
      become_user: "{{ molecule_user }}"
      vars:
        collection_namespace: "{{ (lookup('file', playbook_dir ~ '/../../galaxy.yml') | from_yaml).namespace }}"
        collection_name: "{{ (lookup('file', playbook_dir ~ '/../../galaxy.yml') | from_yaml).name }}"
      block:
        - name: Local user collections path exists
          ansible.builtin.file:
            path: ~/.ansible/collections/ansible_collections
            state: directory

        - name: Project dir does not exist (Clean Slate ó°©¸)
          ansible.builtin.file:
            path: ~/.ansible/collections/ansible_collections/{{ collection_namespace }}/{{ collection_name }}
            state: absent

        - name: Recreate project dir
          ansible.builtin.file:
            path: ~/.ansible/collections/ansible_collections/{{ collection_namespace }}/{{ collection_name }}
            state: directory

        - name: Deploy project to host
          ansible.builtin.unarchive:
            src: "{{ molecule_ephemeral_directory }}/project.tar"
            dest: ~/.ansible/collections/ansible_collections/{{ collection_namespace }}/{{ collection_name }}
            copy: true

